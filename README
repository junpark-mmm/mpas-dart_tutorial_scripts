# -----------------------------------------
 Main README file for MPAS-DART Tutorial
 Last updated: December 02, 2024

 - support global domain application of MPAS-DART (~240km; x1.10242) 
   : tested with NCAR HPC 'derecho' and 'ubuntu' laptop
     based on the public WRF&WPS v4.6.0, MPAS-A v8.2.0, and DART v11.8.5

# -----------------------------------------
 Description of files

 mpas-dart_tutorial_scripts/
   - README_archive/: original README files for MPAS-DART applications
   - download.tcsh: download GFS or GEFS data from NCAR RDA or AWS S3
   - driver_initial_ens.tcsh: main driver script to create initial BKG ensemble
         1) prep_initial_ens.tcsh : create initial condition
         2) mpas_first_advance.tcsh : run MPAS-A to generate forecasts

   - driver_dart_advance.tcsh : main driver script to run filter and forecast model
         1) assimilate.tcsh : run EAKF analysis and update restart files with DART analyses
         2) mpas_advance.tcsh : run 'atmosphere_model' to advance next cycle

   - run_obs_preprocess.tcsh: run 'mpas_dart_obs_preprocess' to further preprocess obs_seq files
   - run_obs_diag.tcsh: run 'ob_diag' to create netCDF diagnostics file from obs_seqfile after filter job 

# -----------------------------------------
 Future updates will be made on the below topics
 - support regional DA application (e.g., LBC updates)
 - use newer stream file ('da_state' and 'invariant' streams)
 - single observation experiment
 - some scripts to check the impacts of DA
                       
# -----------------------------------------
 Outline of Procedure for tutorial (MPAS-DART)
 : The current MPAS-DART tutorial is intended to create IC condition on Apr 17, 2019 
   and run 14-day forecast using 'restart' stream for the first cycle DA with the 240-km global grid
   After that, this will run EAKF analysis using 'filter' and advance forecasts every 6 hour 

 1. Compile DART, MPAS-A, WPS 
  - you may refer to below documentations 
   1) DART: https://docs.dart.ucar.edu/en/latest/guide/compiling-dart.html
   2) MPAS-A: https://www2.mmm.ucar.edu/projects/mpas/mpas_atmosphere_users_guide_8.2.0.pdf ( see chapter #3)
              For detailed information on MPAS-A, please refer to the below MPAS-A tutorial
              https://www2.mmm.ucar.edu/projects/mpas/tutorial/Virtual2024/
   3) WRF & WPS: https://www2.mmm.ucar.edu/wrf/users/wrf_users_guide/build/html/compiling.html

 2. Clone 'mpas-dart_tutorial_srcripts' repository to obtain the scripts used for MPAS-DART tutorial
  : You don't need to take step in future (after these scripts are included in official DART repository)

   git clone https://github.com/junpark-mmm/mpas-dart_tutorial_srcripts.git

 3. Move to 'dart_tutorial_srcripts' and modify 'params.tcsh' to your own configuration
  : search word 'Change' in the script and modify based on your own environment
    The current parameters are tuned for running the tutorial case. make change others if necessary

    the important variables are described below.
   # ----------------------------------------
   set EXPERIMENT_NAME = ....  - main experimental directory
   set   RUN_IN_PBS = ....     - using PBS scheduler or not ;
                                 you need tunning at job scripts 
                                 when you use this at other HPC (use 'qsub' at derecho)
   set  PROJ_NUMBER = ....     - your allocated project ID to submit job at PBS

   set  ROOT_DIR    = ....     - your main work path; ${ROOT_DIR}/${EXPERIMENT_NAME} will be created.
   set MPAS_DIR     = ..../MPAS-Model       # MPAS-A PATH
   set DART_DIR     = ..../DART             # DART PATH
   set WPS_DIR      = ..../WPS              # WPS PATH
   # ----------------------------------------
     
 3. Run 'setup.tcsh' to create an experimental directory; copy executables; download and untar tutorial data
  * Tutorial Data (~2.2GB) are currently stored at google drive (downloading large files at terminal didn't work)
  * They will be placed into a public space (which we can use 'wget' or 'curl') in future
  * Please download them at web browser from below link and then place it your current work directory (mpas-dart_tutorial_srcripts)

         https://drive.google.com/file/d/175dxvoQki3CN8-fnayQV_EBYb3mvQTxj/view?usp=sharing

         this has 4 directories 
         1) init/ ~ initial condition files for background ensemble forecasts (Apr 17 2019)
         2) obs/  ~ obs sequence files used in DART application; converted from PrepBUFR DS337000 at NCAR RDA
         3) output/ ~ ensemble restart files for the first cycle DA; 14-day forecast valid at 00 UTC on May 1, 2019
         4) template/ ~ template files and global domain static file (x1.10242.static.nc) used in tutorial

     ./setup.tcsh params.tcsh

4. Move to your experimental directory ${ROOT_DIR} and check if you can see those directories at ${EXPERIMENT_NAME}
   
   - scripts/  : the directory where job scripts are copied; you will submit job here
   - rundir/   : the directory where actual jobs are being executed
   - exec/     : the directory where DART executables are copied
   - obs/      : the directory with observaton sequence files
   - extm/     : the directory where external GFS or GEFS grib2 data are downloaded
   - init/     : the directory storing MPAS-A IC files from external data 
   - template/ : the directory where template and static files are placed
   - output/   : the directory to store BKG/ANL, obs diagnostic, log files during the cycle

 *************************************************************************************************************
 **** users may skip step 5-6 since tutorial will provide initial condition, and restart files for the first cycle.
      You may delete files at init/* and output/* if you are going to run initial BKG ensemble forecast on your own. ***

5. Move to 'srcripts/' and run 'download.tcsh' to obtain external grib2 at extm/
   : The tutorial is going to download GFS data at 00 UTC on Apr 17, 2019
     This 'download.tcsh' requires 3 arguments
      $1 : start date to download data
      $2 : end date to download data (no need to consider for global application)
      $3 : path for params.tcsh (determine GFS or GEFS here)
 
   To downlaod GFS data at 00 UTC on Apr 17,2024
       ./download.tcsh 2019041700 2019041700 params.tcsh

     after execution, you can see files at ${BASE_DIR}/extm/2019041700/gfs.0p25.2019041700.f000.grib2
     * Please note that AWS S3 and NCAR RDA has different naming convention for this GFS grib2 files

6. Run 'driver_initial_ens.tcsh' to create init file and initial background forecast ensemble
   : This will create initial condition files at init/ and restart files at output/
     This script utilizes two main job scripts in sequence
         1) prep_initial_ens.tcsh : create initial condition 
          :  if  GFS is employed, run 'init_atmosphere_model' to create IC 
                                  and then run 'filter' to add perturbations
                GEFS is employed, run 'init_atmosphere_model' for every member
                after that, they will be copied to init/

         2) mpas_first_advance.tcsh 
          : run MPAS-A to generate intial BKG ensembleforecasts
           by using IC files at init/; after completion, the restart files are stored at output/

     This 'driver_initial_ens.tcsh' requires 3 arguments
      $1 : start date to run forecast
      $2 : forecast length (hour)
      $3 : path for params.tcsh (determine GFS or GEFS here)
 
    To create 336-hour forecasts from 00 UTC on Apr 17, 2019 
        ./driver_initial_ens.tcsh 2019041700 336 params.csh
   
    You may see initial condition files at ${INIT_DIR}/${DATE}/member${IDX}/${MPAS_GRID}.init.nc
                restart files           at ${OUTPUT_DIR}/${DATE}/member${IDX}/restart${DATE}.nc
                log files               at ${OUTPUT_DIR}/logs/${DATE}/

 *************************************************************************************************************

7. run 'run_obs_preprocess.tcsh' to create Quality-Controlled obs_seq file
   : obs_seq files are available from tutorial data but base_file is just extracted from PrepBUFR converter at DART
     We will conduct additional QC for MPAS-DART application. This includes
       1) superob on aircraft observations using model grid info
       2) adjust QC flag for NCEP SFC and SATWIND OBSTYPE, and
       3) reject some SFC observations by checking elevation difference between OBS and model background
       4) increase errors near boundary area in case of regional application (not avaialble at DART v11.8.5)

     This 'run_obs_preprocess.tcsh' requires 4 arguments
      $1 : start date to run mpas_dart_obs_preprocess
      $2 : end date to run mpas_dart_obs_preprocess
      $3 : processing hour inteval (hour)
      $4 : path for params.tcsh

     To create additionally Quality-controlled obs_seq file from May 1, 2019 to May 7, 2019
       ./run_obs_preprocess.tcsh 2019050100 2019050700 6 params.tcsh

     You may see some reduced size of obs_sequence files which have a postfix of '_after' at ${OBS_DIR}

8. run 'driver_dart_advance.tcsh' to perform analysis and advance forecasts to next cycles 
   : Since we currently have initial background forecast ensemble, observation sequence file,
     we can run actual DA cycles by using 'filter' to run EAKF analysis (we us this for tutorial)
            and then advance MPAS-A forecasts using DA analyses.
     This script utilizes two main job scripts in sequence
         1) assimilate.tcsh : run EAKF analysis
          : run 'filter' to do EAKF analysis
            and then run 'update_mpas_states' to update background file with analysis
         2) mpas_advance.tcsh
          : run 'atmosphere_model' to advance next cycle

     This 'driver_dart_advance.tcsh' requires 4 arguments
      $1 : start date of DA cycle
      $2 : end date of DA cycle
      $3 : cycling hour inteval (hour)
      $4 : path for params.tcsh

     To run DA cycles every 6 hour from 00 UTC on May 1, 2019 to 00 UTC on May 2 using DART and MPAS-A
       ./driver_dart_advance.csh 2019050100 2019050200 6 params.tcsh

     After successful executions, you may see those files
      1) ${OUTPUT_DIR}/${DATE}/members${IDX}/
         - restart.${DATE}.nc : background file
         - analysis.${DATE}.nc : DART analysis file (containing analysis variables only)
         - afterda.${DATE}.nc : analysis file (based on background file and then add increments from DART analysis)
                                this file is going to be used as IC during cycling DA
      2) ${OUTPUT_DIR}/${DATE}/
         - obs_seq.final : observation diagnostic sequence file at each cycle (prior + posterior)
         - output_priorinf_(mean/sd).nc : inflation files used for adaptive prior inflation
         - input.nml.filter : namelist file used at filter job

      3) ${OUTPUT_DIR}/logs/${DATE}/ : log files for filter and MPAS-A forecasts
    
9. run 'run_obs_diag.tcsh' to create diagnostics netCDF file for each cycle.
  : This is a kind of generic executable to convert ascii obs_seq file to netCDF file using 'ob_diag'
    This will create a netCDF file by using obs_seq file after filter job (obs_seq.final at ${OUTPUT_DIR}

     This 'run_obs_diag.tcsh' requires 4 arguments
      $1 : start date to run ob_diag
      $2 : end date to run ob_diag
      $3 : processing hour inteval (hour)
      $4 : path for params.tcsh

     To create netCDF OBS diagnostics files from May 1, 2019 to May 2, 2019
       ./run_obs_diag.tcsh 2019050100 2019050200 6 params.tcsh

     You may see netCDF files (e.g., ${OUTPUT_DIR}/${DATE}/obs_diag_${DATE}.nc ). This can be utilized for analysis

